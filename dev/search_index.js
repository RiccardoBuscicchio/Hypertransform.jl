var documenterSearchIndex = {"docs":
[{"location":"#Hypertransform.jl","page":"Home","title":"Hypertransform.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Welcome to the documentation for Hypertransform.jl!","category":"page"},{"location":"#Hypertransform.hypertriangulate","page":"Home","title":"Hypertransform.hypertriangulate","text":"hypertriangulate(x::AbstractArray; bounds::Tuple{<:Real, <:Real} = (0.0, 1.0))\nTransform a vector or matrix from the hypercube space to the hypertriangle space.\nEach input vector is mapped such that the output is in the range defined by `bounds`.\n# Arguments\n- `x`: A vector of length `n` or a matrix of size `(m, n)` where each row is a point in the hypercube space.\n- `bounds`: A tuple `(lower, upper)` defining the target parameter bounds.\n# Returns\n- Transformed vector or matrix of the same shape as input, mapped to the hypertriangle space.\n\n\n\n\n\n","category":"function"},{"location":"#Hypertransform.hypercubify","page":"Home","title":"Hypertransform.hypercubify","text":"hypercubify(y::AbstractArray; bounds::Tuple{<:Real, <:Real} = (0.0, 1.0))\nTransform a vector or matrix from the hypertriangle space back to the hypercube.\nEach input vector is mapped such that the output is in the range defined by `bounds`.\n# Arguments\n- `y`: A vector of length `n` or a matrix of size `(m, n)` where each row is a point in the hypertriangle space.\n- `bounds`: A tuple `(lower, upper)` defining the target parameter bounds.\n# Returns\n- Transformed vector or matrix of the same shape as input, mapped back to the hypercube space.\n\n\n\n\n\n","category":"function"}]
}
